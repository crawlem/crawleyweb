// Generated by CoffeeScript 1.6.2
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

module.exports = function(BasePlugin) {
  var Feedr, FeedrPlugin, feedr, _ref;

  Feedr = null;
  feedr = null;
  return FeedrPlugin = (function(_super) {
    __extends(FeedrPlugin, _super);

    function FeedrPlugin() {
      _ref = FeedrPlugin.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    FeedrPlugin.prototype.name = 'feedr';

    FeedrPlugin.prototype.config = {
      xml2jsOptions: '0.1'
    };

    FeedrPlugin.prototype.renderBefore = function(_arg, next) {
      var config, docpad, templateData, _base;

      templateData = _arg.templateData;
      docpad = this.docpad;
      config = this.config;
      config.feeds || (config.feeds = {});
      templateData.feedr || (templateData.feedr = {});
      (_base = templateData.feedr).feeds || (_base.feeds = {});
      if (Feedr == null) {
        Feedr = require('feedr').Feedr;
      }
      if (feedr == null) {
        config.log = docpad.log;
        config.logError = docpad.error;
        feedr = new Feedr(config);
      }
      feedr.readFeeds(config.feeds, function(err, result) {
        if (err) {
          return next(err);
        }
        templateData.feedr.feeds = result;
        return next();
      });
      return this;
    };

    return FeedrPlugin;

  })(BasePlugin);
};
