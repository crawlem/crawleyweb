{
  "name": "feedr",
  "version": "2.5.1",
  "description": "Takes in a remote feed and converts it to json data",
  "homepage": "http://bevry.me/project/feedr",
  "keywords": [
    "feeds",
    "rss",
    "xml",
    "atom",
    "rdf",
    "json",
    "jsonp"
  ],
  "author": {
    "name": "Bevry Pty Ltd",
    "email": "us@bevry.me",
    "url": "http://bevry.me"
  },
  "maintainers": [
    {
      "name": "Benjamin Lupton",
      "email": "b@lupton.cc",
      "url": "https://github.com/balupton"
    }
  ],
  "contributors": [
    {
      "name": "Benjamin Lupton",
      "email": "b@lupton.cc",
      "url": "https://github.com/balupton"
    }
  ],
  "bugs": {
    "url": "http://bevry.me/project/feedr/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/bevry/feedr.git"
  },
  "engines": {
    "node": ">=0.4.0"
  },
  "dependencies": {
    "safefs": "~3.0.1",
    "safeps": "~2.2.6",
    "eachr": "~2.0.2",
    "extendr": "~2.1.0",
    "typechecker": "~2.0.1",
    "taskgroup": "~3.1.2",
    "bal-util": "~2.2.0",
    "xml2js": "~0.2.4"
  },
  "devDependencies": {
    "coffee-script": "~1.6.2",
    "joe": "~1.2.0",
    "joe-reporter-console": "~1.2.1",
    "chai": "~1.7.2"
  },
  "main": "./out/lib/feedr.js",
  "scripts": {
    "test": "node ./out/test/everything-test.js"
  },
  "readme": "# Feedr\n\n[![Build Status](https://secure.travis-ci.org/bevry/feedr.png?branch=master)](http://travis-ci.org/bevry/feedr)\n[![NPM version](https://badge.fury.io/js/feedr.png)](https://npmjs.org/package/feedr)\n[![Flattr this project](https://raw.github.com/balupton/flattr-buttons/master/badge-89x18.gif)](http://flattr.com/thing/344188/balupton-on-Flattr)\n\nFeedr takes in a remote feed (regardless of format type) and converts it into JSON data\n\n\n\n## Install\n\n```\nnpm install --save feedr\n```\n\n\n\n## Usage\n\n``` javascript\n// Prepare\nvar Feedr, feedr, feeds;\n\n// Include the Feedr Class\nFeedr = require('feedr').Feedr;\n\n// Create our Feedr instance, we can pass optional configuration to it here if we wanted\nfeedr = new Feedr();\n\n// Prepare our feeds that we want read\nfeeds = {\n\tgithub: {\n\t\turl: \"https://github.com/bevry/feedr/commits/master.atom\"\n\t},\n\ttwitter: {\n\t\turl: \"https://api.twitter.com/1/statuses/user_timeline.json?screen_name=balupton&count=20&include_entities=true&include_rts=true\"\n\t}\n};\n\n// Read our feeds and return the result\nfeedr.readFeeds(feeds, function(err,result){\n\tconsole.log(err,result.github,result.twitter);\n});\n```\n\n\n\n## Configuration\n\n- `log: null` our log function to use\n- `logError: null` our error log function to use\n- `tmpPath: null` the tempory path to cache our feedr results to (will autodetect if `null`)\n- `cache: true` whether or not we should cache the results\n- `cacheTime: 1000*60*5` how long should the cache stay active in milliseconds\n- `timeout: 10*1000` how long should we wait before aborting the request in milliseconds\n- `xmljsOptions: null` what options should we pass to [xml2js](https://github.com/Leonidas-from-XIV/node-xml2js) (can be a string which will reference to `xml2js.defaults`)\n\n\n\n## History\nYou can discover the history inside the `History.md` file\n\n\n\n## License\nLicensed under the [MIT License](http://creativecommons.org/licenses/MIT/)\n<br/>Copyright &copy; 2012+ [Bevry Pty Ltd](http://bevry.me)",
  "readmeFilename": "README.md",
  "_id": "feedr@2.5.1",
  "_from": "feedr@~2.5.0"
}
